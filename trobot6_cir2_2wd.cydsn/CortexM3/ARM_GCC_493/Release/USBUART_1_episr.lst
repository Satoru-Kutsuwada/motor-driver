ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART_1_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBUART_1_EP_1_ISR,"ax",%progbits
  19              		.align	1
  20              		.global	USBUART_1_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBUART_1_EP_1_ISR, %function
  24              	USBUART_1_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBUART_1_episr.c"
   1:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \file USBUART_1_episr.c
   3:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
   5:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
   8:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  16:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_pvt.h"
  17:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_cydmac.h"
  18:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  20:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  21:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  26:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  28:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  29:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_1_ISR
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 2


  32:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  40:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  44:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  46:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  48:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
  55:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 094A     		ldr	r2, .L6
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 03F0FE03 		and	r3, r3, #254
  36 0008 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  57:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP1].addr & USBUART_1_DIR_IN))
  63:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP1].epCr0;
  37              		.loc 1 66 0
  38 000a 084B     		ldr	r3, .L6+4
  39 000c 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
  68:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP1) != USBUART_1_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000e 084B     		ldr	r3, .L6+8
  42 0010 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
  43 0012 02F00302 		and	r2, r2, #3
  44 0016 012A     		cmp	r2, #1
  70:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 3


  71:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP1].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0018 1EBF     		ittt	ne
  47 001a DA7B     		ldrbne	r2, [r3, #15]	@ zero_extendqisi2
  48 001c 82F08002 		eorne	r2, r2, #128
  49 0020 DA73     		strbne	r2, [r3, #15]
  72:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  74:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP1].apiEpState = USBUART_1_EVENT_PENDING;
  50              		.loc 1 80 0
  51 0022 0122     		movs	r2, #1
  52 0024 5A73     		strb	r2, [r3, #13]
  53 0026 7047     		bx	lr
  54              	.L7:
  55              		.align	2
  56              	.L6:
  57 0028 0B600040 		.word	1073766411
  58 002c FC5F0040 		.word	1073766396
  59 0030 00000000 		.word	USBUART_1_EP
  60              		.cfi_endproc
  61              	.LFE0:
  62              		.size	USBUART_1_EP_1_ISR, .-USBUART_1_EP_1_ISR
  63              		.section	.text.USBUART_1_EP_2_ISR,"ax",%progbits
  64              		.align	1
  65              		.global	USBUART_1_EP_2_ISR
  66              		.thumb
  67              		.thumb_func
  68              		.type	USBUART_1_EP_2_ISR, %function
  69              	USBUART_1_EP_2_ISR:
  70              	.LFB1:
  81:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  83:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP1)
  87:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
  93:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  95:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
  97:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 101:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 4


 102:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 104:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 108:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 109:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 111:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 112:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  71              		.loc 1 121 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
 122:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 126:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 128:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 130:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 137:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP2_INTR);
  76              		.loc 1 137 0
  77 0000 0A4A     		ldr	r2, .L13
  78 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  79 0004 03F0FD03 		and	r3, r3, #253
  80 0008 1370     		strb	r3, [r2]
 138:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 139:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP2].addr & USBUART_1_DIR_IN))
 145:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP2].epCr0;
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 5


  81              		.loc 1 148 0
  82 000a 094B     		ldr	r3, .L13+4
  83 000c 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 150:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP2) != USBUART_1_EP_TYPE_ISOC)
  84              		.loc 1 151 0
  85 0010 084B     		ldr	r3, .L13+8
  86 0012 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
  87 0014 02F00302 		and	r2, r2, #3
  88 0018 012A     		cmp	r2, #1
 152:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP2].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
  89              		.loc 1 153 0
  90 001a 1EBF     		ittt	ne
  91 001c DA7E     		ldrbne	r2, [r3, #27]	@ zero_extendqisi2
  92 001e 82F08002 		eorne	r2, r2, #128
  93 0022 DA76     		strbne	r2, [r3, #27]
 154:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 156:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP2].apiEpState = USBUART_1_EVENT_PENDING;
  94              		.loc 1 162 0
  95 0024 0122     		movs	r2, #1
  96 0026 5A76     		strb	r2, [r3, #25]
  97 0028 7047     		bx	lr
  98              	.L14:
  99 002a 00BF     		.align	2
 100              	.L13:
 101 002c 0B600040 		.word	1073766411
 102 0030 FC5F0040 		.word	1073766396
 103 0034 00000000 		.word	USBUART_1_EP
 104              		.cfi_endproc
 105              	.LFE1:
 106              		.size	USBUART_1_EP_2_ISR, .-USBUART_1_EP_2_ISR
 107              		.section	.text.USBUART_1_EP_3_ISR,"ax",%progbits
 108              		.align	1
 109              		.global	USBUART_1_EP_3_ISR
 110              		.thumb
 111              		.thumb_func
 112              		.type	USBUART_1_EP_3_ISR, %function
 113              	USBUART_1_EP_3_ISR:
 114              	.LFB2:
 163:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 165:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP2)
 169:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 6


 172:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 175:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 177:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 179:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 183:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 186:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 192:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 193:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 115              		.loc 1 202 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 203:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 207:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 209:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 211:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 218:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP3_INTR);    
 120              		.loc 1 218 0
 121 0000 0C4A     		ldr	r2, .L20
 122 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 123 0004 03F0FB03 		and	r3, r3, #251
 124 0008 1370     		strb	r3, [r2]
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 7


 219:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 220:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP3].addr & USBUART_1_DIR_IN))
 226:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP3].epCr0;
 125              		.loc 1 229 0
 126 000a 0B4B     		ldr	r3, .L20+4
 127 000c 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 231:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP3) != USBUART_1_EP_TYPE_ISOC)
 128              		.loc 1 232 0
 129 0010 0A4B     		ldr	r3, .L20+8
 130 0012 93F82420 		ldrb	r2, [r3, #36]	@ zero_extendqisi2
 131 0016 02F00302 		and	r2, r2, #3
 132 001a 012A     		cmp	r2, #1
 233:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP3].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 133              		.loc 1 234 0
 134 001c 1EBF     		ittt	ne
 135 001e 93F82720 		ldrbne	r2, [r3, #39]	@ zero_extendqisi2
 136 0022 82F08002 		eorne	r2, r2, #128
 137 0026 83F82720 		strbne	r2, [r3, #39]
 235:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 237:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP3].apiEpState = USBUART_1_EVENT_PENDING;
 138              		.loc 1 243 0
 139 002a 0122     		movs	r2, #1
 140 002c 83F82520 		strb	r2, [r3, #37]
 141 0030 7047     		bx	lr
 142              	.L21:
 143 0032 00BF     		.align	2
 144              	.L20:
 145 0034 0B600040 		.word	1073766411
 146 0038 FC5F0040 		.word	1073766396
 147 003c 00000000 		.word	USBUART_1_EP
 148              		.cfi_endproc
 149              	.LFE2:
 150              		.size	USBUART_1_EP_3_ISR, .-USBUART_1_EP_3_ISR
 151              		.section	.text.USBUART_1_SOF_ISR,"ax",%progbits
 152              		.align	1
 153              		.global	USBUART_1_SOF_ISR
 154              		.thumb
 155              		.thumb_func
 156              		.type	USBUART_1_SOF_ISR, %function
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 8


 157              	USBUART_1_SOF_ISR:
 158              	.LFB3:
 244:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 246:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP3)
 250:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 256:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 258:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 260:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 264:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 267:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 273:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 274:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 288:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 290:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 292:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 9


 299:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 301:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP4].addr & USBUART_1_DIR_IN))
 307:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 312:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP4) != USBUART_1_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP4].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 318:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP4].apiEpState = USBUART_1_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 327:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP4)
 331:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 337:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 339:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 341:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 345:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 348:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 354:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 355:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP5_ISR_ACTIVE)
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 10


 356:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 370:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 372:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 374:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                  USBUART_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 381:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 383:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP5].addr & USBUART_1_DIR_IN))
 389:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 394:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP5) != USBUART_1_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP5].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 400:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP5].apiEpState = USBUART_1_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 409:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP5)
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 11


 413:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 419:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 421:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 423:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 427:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 430:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 436:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 437:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 452:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 454:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 456:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 463:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 465:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 12


 470:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP6].addr & USBUART_1_DIR_IN))
 471:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 476:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP6) != USBUART_1_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP6].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 482:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP6].apiEpState = USBUART_1_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 491:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP6)
 495:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 501:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 503:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 505:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 509:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 512:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 518:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 519:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 13


 527:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 534:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 536:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 538:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     
 545:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 547:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP7].addr & USBUART_1_DIR_IN))
 553:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 558:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP7) != USBUART_1_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP7].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             
 564:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP7].apiEpState = USBUART_1_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 573:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 574:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP7)
 578:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 14


 584:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 586:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 588:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 592:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 595:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 601:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 602:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 617:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 619:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 621:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 628:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 630:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP8].addr & USBUART_1_DIR_IN))
 636:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 15


 641:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP8) != USBUART_1_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP8].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 647:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP8].apiEpState = USBUART_1_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 656:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP8)
 660:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 666:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 668:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 670:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 674:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         
 677:.\Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 683:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 684:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_SOF_ISR
 687:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 159              		.loc 1 694 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 16


 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164 0000 7047     		bx	lr
 165              		.cfi_endproc
 166              	.LFE3:
 167              		.size	USBUART_1_SOF_ISR, .-USBUART_1_SOF_ISR
 168              		.section	.text.USBUART_1_BUS_RESET_ISR,"ax",%progbits
 169              		.align	1
 170              		.global	USBUART_1_BUS_RESET_ISR
 171              		.thumb
 172              		.thumb_func
 173              		.type	USBUART_1_BUS_RESET_ISR, %function
 174              	USBUART_1_BUS_RESET_ISR:
 175              	.LFB4:
 695:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 699:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 701:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 703:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 705:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 709:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 711:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 712:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBUART_1_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBUART_1_episr.c **** * Function Name: USBUART_1_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBUART_1_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 717:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 720:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *
 721:.\Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBUART_1_episr.c **** CY_ISR(USBUART_1_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBUART_1_episr.c **** {
 176              		.loc 1 723 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 724:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 728:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 730:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 732:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_BUS_RESET_INTR);
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 17


 733:.\Generated_Source\PSoC5/USBUART_1_episr.c **** 
 734:.\Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ReInitComponent();
 181              		.loc 1 734 0
 182 0000 FFF7FEBF 		b	USBUART_1_ReInitComponent
 183              	.LVL0:
 184              		.cfi_endproc
 185              	.LFE4:
 186              		.size	USBUART_1_BUS_RESET_ISR, .-USBUART_1_BUS_RESET_ISR
 187              		.text
 188              	.Letext0:
 189              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 190              		.file 3 ".\\Generated_Source\\PSoC5\\USBUART_1.h"
 191              		.file 4 ".\\Generated_Source\\PSoC5\\USBUART_1_pvt.h"
 192              		.section	.debug_info,"",%progbits
 193              	.Ldebug_info0:
 194 0000 40020000 		.4byte	0x240
 195 0004 0400     		.2byte	0x4
 196 0006 00000000 		.4byte	.Ldebug_abbrev0
 197 000a 04       		.byte	0x4
 198 000b 01       		.uleb128 0x1
 199 000c 56000000 		.4byte	.LASF36
 200 0010 01       		.byte	0x1
 201 0011 FB010000 		.4byte	.LASF37
 202 0015 0E010000 		.4byte	.LASF38
 203 0019 00000000 		.4byte	.Ldebug_ranges0+0
 204 001d 00000000 		.4byte	0
 205 0021 00000000 		.4byte	.Ldebug_line0
 206 0025 02       		.uleb128 0x2
 207 0026 01       		.byte	0x1
 208 0027 06       		.byte	0x6
 209 0028 C6020000 		.4byte	.LASF0
 210 002c 02       		.uleb128 0x2
 211 002d 01       		.byte	0x1
 212 002e 08       		.byte	0x8
 213 002f E4000000 		.4byte	.LASF1
 214 0033 02       		.uleb128 0x2
 215 0034 02       		.byte	0x2
 216 0035 05       		.byte	0x5
 217 0036 98020000 		.4byte	.LASF2
 218 003a 02       		.uleb128 0x2
 219 003b 02       		.byte	0x2
 220 003c 07       		.byte	0x7
 221 003d 19000000 		.4byte	.LASF3
 222 0041 02       		.uleb128 0x2
 223 0042 04       		.byte	0x4
 224 0043 05       		.byte	0x5
 225 0044 B2020000 		.4byte	.LASF4
 226 0048 02       		.uleb128 0x2
 227 0049 04       		.byte	0x4
 228 004a 07       		.byte	0x7
 229 004b F7000000 		.4byte	.LASF5
 230 004f 02       		.uleb128 0x2
 231 0050 08       		.byte	0x8
 232 0051 05       		.byte	0x5
 233 0052 61020000 		.4byte	.LASF6
 234 0056 02       		.uleb128 0x2
 235 0057 08       		.byte	0x8
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 18


 236 0058 07       		.byte	0x7
 237 0059 DA010000 		.4byte	.LASF7
 238 005d 03       		.uleb128 0x3
 239 005e 04       		.byte	0x4
 240 005f 05       		.byte	0x5
 241 0060 696E7400 		.ascii	"int\000"
 242 0064 02       		.uleb128 0x2
 243 0065 04       		.byte	0x4
 244 0066 07       		.byte	0x7
 245 0067 B4010000 		.4byte	.LASF8
 246 006b 04       		.uleb128 0x4
 247 006c A2020000 		.4byte	.LASF9
 248 0070 02       		.byte	0x2
 249 0071 9201     		.2byte	0x192
 250 0073 2C000000 		.4byte	0x2c
 251 0077 04       		.uleb128 0x4
 252 0078 A2010000 		.4byte	.LASF10
 253 007c 02       		.byte	0x2
 254 007d 9301     		.2byte	0x193
 255 007f 3A000000 		.4byte	0x3a
 256 0083 02       		.uleb128 0x2
 257 0084 04       		.byte	0x4
 258 0085 04       		.byte	0x4
 259 0086 06000000 		.4byte	.LASF11
 260 008a 02       		.uleb128 0x2
 261 008b 08       		.byte	0x8
 262 008c 04       		.byte	0x4
 263 008d 6A010000 		.4byte	.LASF12
 264 0091 02       		.uleb128 0x2
 265 0092 01       		.byte	0x1
 266 0093 08       		.byte	0x8
 267 0094 88020000 		.4byte	.LASF13
 268 0098 04       		.uleb128 0x4
 269 0099 F2000000 		.4byte	.LASF14
 270 009d 02       		.byte	0x2
 271 009e 3C02     		.2byte	0x23c
 272 00a0 A4000000 		.4byte	0xa4
 273 00a4 05       		.uleb128 0x5
 274 00a5 6B000000 		.4byte	0x6b
 275 00a9 02       		.uleb128 0x2
 276 00aa 04       		.byte	0x4
 277 00ab 07       		.byte	0x7
 278 00ac 39020000 		.4byte	.LASF15
 279 00b0 06       		.uleb128 0x6
 280 00b1 0C       		.byte	0xc
 281 00b2 03       		.byte	0x3
 282 00b3 8E       		.byte	0x8e
 283 00b4 25010000 		.4byte	0x125
 284 00b8 07       		.uleb128 0x7
 285 00b9 71010000 		.4byte	.LASF16
 286 00bd 03       		.byte	0x3
 287 00be 90       		.byte	0x90
 288 00bf 6B000000 		.4byte	0x6b
 289 00c3 00       		.byte	0
 290 00c4 07       		.uleb128 0x7
 291 00c5 A9010000 		.4byte	.LASF17
 292 00c9 03       		.byte	0x3
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 19


 293 00ca 91       		.byte	0x91
 294 00cb 6B000000 		.4byte	0x6b
 295 00cf 01       		.byte	0x1
 296 00d0 07       		.uleb128 0x7
 297 00d1 F1010000 		.4byte	.LASF18
 298 00d5 03       		.byte	0x3
 299 00d6 92       		.byte	0x92
 300 00d7 6B000000 		.4byte	0x6b
 301 00db 02       		.byte	0x2
 302 00dc 07       		.uleb128 0x7
 303 00dd 4D000000 		.4byte	.LASF19
 304 00e1 03       		.byte	0x3
 305 00e2 93       		.byte	0x93
 306 00e3 6B000000 		.4byte	0x6b
 307 00e7 03       		.byte	0x3
 308 00e8 07       		.uleb128 0x7
 309 00e9 09010000 		.4byte	.LASF20
 310 00ed 03       		.byte	0x3
 311 00ee 94       		.byte	0x94
 312 00ef 6B000000 		.4byte	0x6b
 313 00f3 04       		.byte	0x4
 314 00f4 07       		.uleb128 0x7
 315 00f5 5A020000 		.4byte	.LASF21
 316 00f9 03       		.byte	0x3
 317 00fa 95       		.byte	0x95
 318 00fb 6B000000 		.4byte	0x6b
 319 00ff 05       		.byte	0x5
 320 0100 07       		.uleb128 0x7
 321 0101 BB020000 		.4byte	.LASF22
 322 0105 03       		.byte	0x3
 323 0106 96       		.byte	0x96
 324 0107 77000000 		.4byte	0x77
 325 010b 06       		.byte	0x6
 326 010c 07       		.uleb128 0x7
 327 010d 8D020000 		.4byte	.LASF23
 328 0111 03       		.byte	0x3
 329 0112 97       		.byte	0x97
 330 0113 77000000 		.4byte	0x77
 331 0117 08       		.byte	0x8
 332 0118 07       		.uleb128 0x7
 333 0119 A8020000 		.4byte	.LASF24
 334 011d 03       		.byte	0x3
 335 011e 98       		.byte	0x98
 336 011f 6B000000 		.4byte	0x6b
 337 0123 0A       		.byte	0xa
 338 0124 00       		.byte	0
 339 0125 08       		.uleb128 0x8
 340 0126 6F020000 		.4byte	.LASF25
 341 012a 03       		.byte	0x3
 342 012b 99       		.byte	0x99
 343 012c B0000000 		.4byte	0xb0
 344 0130 06       		.uleb128 0x6
 345 0131 10       		.byte	0x10
 346 0132 03       		.byte	0x3
 347 0133 D5       		.byte	0xd5
 348 0134 69010000 		.4byte	0x169
 349 0138 07       		.uleb128 0x7
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 20


 350 0139 3F000000 		.4byte	.LASF26
 351 013d 03       		.byte	0x3
 352 013e D7       		.byte	0xd7
 353 013f 6B000000 		.4byte	0x6b
 354 0143 00       		.byte	0
 355 0144 07       		.uleb128 0x7
 356 0145 46000000 		.4byte	.LASF27
 357 0149 03       		.byte	0x3
 358 014a D8       		.byte	0xd8
 359 014b 6B000000 		.4byte	0x6b
 360 014f 01       		.byte	0x1
 361 0150 07       		.uleb128 0x7
 362 0151 00000000 		.4byte	.LASF28
 363 0155 03       		.byte	0x3
 364 0156 D9       		.byte	0xd9
 365 0157 6B000000 		.4byte	0x6b
 366 015b 02       		.byte	0x2
 367 015c 09       		.uleb128 0x9
 368 015d 67617000 		.ascii	"gap\000"
 369 0161 03       		.byte	0x3
 370 0162 DA       		.byte	0xda
 371 0163 69010000 		.4byte	0x169
 372 0167 03       		.byte	0x3
 373 0168 00       		.byte	0
 374 0169 0A       		.uleb128 0xa
 375 016a 6B000000 		.4byte	0x6b
 376 016e 79010000 		.4byte	0x179
 377 0172 0B       		.uleb128 0xb
 378 0173 A9000000 		.4byte	0xa9
 379 0177 0C       		.byte	0xc
 380 0178 00       		.byte	0
 381 0179 08       		.uleb128 0x8
 382 017a 42020000 		.4byte	.LASF29
 383 017e 03       		.byte	0x3
 384 017f DB       		.byte	0xdb
 385 0180 30010000 		.4byte	0x130
 386 0184 0C       		.uleb128 0xc
 387 0185 90       		.byte	0x90
 388 0186 03       		.byte	0x3
 389 0187 0F01     		.2byte	0x10f
 390 0189 9B010000 		.4byte	0x19b
 391 018d 0D       		.uleb128 0xd
 392 018e 51010000 		.4byte	.LASF30
 393 0192 03       		.byte	0x3
 394 0193 1101     		.2byte	0x111
 395 0195 9B010000 		.4byte	0x19b
 396 0199 00       		.byte	0
 397 019a 00       		.byte	0
 398 019b 0A       		.uleb128 0xa
 399 019c 79010000 		.4byte	0x179
 400 01a0 AB010000 		.4byte	0x1ab
 401 01a4 0B       		.uleb128 0xb
 402 01a5 A9000000 		.4byte	0xa9
 403 01a9 08       		.byte	0x8
 404 01aa 00       		.byte	0
 405 01ab 04       		.uleb128 0x4
 406 01ac C1010000 		.4byte	.LASF31
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 21


 407 01b0 03       		.byte	0x3
 408 01b1 1201     		.2byte	0x112
 409 01b3 84010000 		.4byte	0x184
 410 01b7 0E       		.uleb128 0xe
 411 01b8 2C000000 		.4byte	.LASF32
 412 01bc 01       		.byte	0x1
 413 01bd 25       		.byte	0x25
 414 01be 00000000 		.4byte	.LFB0
 415 01c2 34000000 		.4byte	.LFE0-.LFB0
 416 01c6 01       		.uleb128 0x1
 417 01c7 9C       		.byte	0x9c
 418 01c8 0E       		.uleb128 0xe
 419 01c9 57010000 		.4byte	.LASF33
 420 01cd 01       		.byte	0x1
 421 01ce 78       		.byte	0x78
 422 01cf 00000000 		.4byte	.LFB1
 423 01d3 38000000 		.4byte	.LFE1-.LFB1
 424 01d7 01       		.uleb128 0x1
 425 01d8 9C       		.byte	0x9c
 426 01d9 0E       		.uleb128 0xe
 427 01da 26020000 		.4byte	.LASF34
 428 01de 01       		.byte	0x1
 429 01df C9       		.byte	0xc9
 430 01e0 00000000 		.4byte	.LFB2
 431 01e4 40000000 		.4byte	.LFE2-.LFB2
 432 01e8 01       		.uleb128 0x1
 433 01e9 9C       		.byte	0x9c
 434 01ea 0F       		.uleb128 0xf
 435 01eb 90010000 		.4byte	.LASF35
 436 01ef 01       		.byte	0x1
 437 01f0 B502     		.2byte	0x2b5
 438 01f2 00000000 		.4byte	.LFB3
 439 01f6 02000000 		.4byte	.LFE3-.LFB3
 440 01fa 01       		.uleb128 0x1
 441 01fb 9C       		.byte	0x9c
 442 01fc 10       		.uleb128 0x10
 443 01fd 78010000 		.4byte	.LASF39
 444 0201 01       		.byte	0x1
 445 0202 D202     		.2byte	0x2d2
 446 0204 00000000 		.4byte	.LFB4
 447 0208 04000000 		.4byte	.LFE4-.LFB4
 448 020c 01       		.uleb128 0x1
 449 020d 9C       		.byte	0x9c
 450 020e 1C020000 		.4byte	0x21c
 451 0212 11       		.uleb128 0x11
 452 0213 04000000 		.4byte	.LVL0
 453 0217 3C020000 		.4byte	0x23c
 454 021b 00       		.byte	0
 455 021c 0A       		.uleb128 0xa
 456 021d 25010000 		.4byte	0x125
 457 0221 2C020000 		.4byte	0x22c
 458 0225 0B       		.uleb128 0xb
 459 0226 A9000000 		.4byte	0xa9
 460 022a 08       		.byte	0x8
 461 022b 00       		.byte	0
 462 022c 12       		.uleb128 0x12
 463 022d 0C000000 		.4byte	.LASF40
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 22


 464 0231 04       		.byte	0x4
 465 0232 79       		.byte	0x79
 466 0233 37020000 		.4byte	0x237
 467 0237 05       		.uleb128 0x5
 468 0238 1C020000 		.4byte	0x21c
 469 023c 13       		.uleb128 0x13
 470 023d D2020000 		.4byte	.LASF41
 471 0241 04       		.byte	0x4
 472 0242 A4       		.byte	0xa4
 473 0243 00       		.byte	0
 474              		.section	.debug_abbrev,"",%progbits
 475              	.Ldebug_abbrev0:
 476 0000 01       		.uleb128 0x1
 477 0001 11       		.uleb128 0x11
 478 0002 01       		.byte	0x1
 479 0003 25       		.uleb128 0x25
 480 0004 0E       		.uleb128 0xe
 481 0005 13       		.uleb128 0x13
 482 0006 0B       		.uleb128 0xb
 483 0007 03       		.uleb128 0x3
 484 0008 0E       		.uleb128 0xe
 485 0009 1B       		.uleb128 0x1b
 486 000a 0E       		.uleb128 0xe
 487 000b 55       		.uleb128 0x55
 488 000c 17       		.uleb128 0x17
 489 000d 11       		.uleb128 0x11
 490 000e 01       		.uleb128 0x1
 491 000f 10       		.uleb128 0x10
 492 0010 17       		.uleb128 0x17
 493 0011 00       		.byte	0
 494 0012 00       		.byte	0
 495 0013 02       		.uleb128 0x2
 496 0014 24       		.uleb128 0x24
 497 0015 00       		.byte	0
 498 0016 0B       		.uleb128 0xb
 499 0017 0B       		.uleb128 0xb
 500 0018 3E       		.uleb128 0x3e
 501 0019 0B       		.uleb128 0xb
 502 001a 03       		.uleb128 0x3
 503 001b 0E       		.uleb128 0xe
 504 001c 00       		.byte	0
 505 001d 00       		.byte	0
 506 001e 03       		.uleb128 0x3
 507 001f 24       		.uleb128 0x24
 508 0020 00       		.byte	0
 509 0021 0B       		.uleb128 0xb
 510 0022 0B       		.uleb128 0xb
 511 0023 3E       		.uleb128 0x3e
 512 0024 0B       		.uleb128 0xb
 513 0025 03       		.uleb128 0x3
 514 0026 08       		.uleb128 0x8
 515 0027 00       		.byte	0
 516 0028 00       		.byte	0
 517 0029 04       		.uleb128 0x4
 518 002a 16       		.uleb128 0x16
 519 002b 00       		.byte	0
 520 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 23


 521 002d 0E       		.uleb128 0xe
 522 002e 3A       		.uleb128 0x3a
 523 002f 0B       		.uleb128 0xb
 524 0030 3B       		.uleb128 0x3b
 525 0031 05       		.uleb128 0x5
 526 0032 49       		.uleb128 0x49
 527 0033 13       		.uleb128 0x13
 528 0034 00       		.byte	0
 529 0035 00       		.byte	0
 530 0036 05       		.uleb128 0x5
 531 0037 35       		.uleb128 0x35
 532 0038 00       		.byte	0
 533 0039 49       		.uleb128 0x49
 534 003a 13       		.uleb128 0x13
 535 003b 00       		.byte	0
 536 003c 00       		.byte	0
 537 003d 06       		.uleb128 0x6
 538 003e 13       		.uleb128 0x13
 539 003f 01       		.byte	0x1
 540 0040 0B       		.uleb128 0xb
 541 0041 0B       		.uleb128 0xb
 542 0042 3A       		.uleb128 0x3a
 543 0043 0B       		.uleb128 0xb
 544 0044 3B       		.uleb128 0x3b
 545 0045 0B       		.uleb128 0xb
 546 0046 01       		.uleb128 0x1
 547 0047 13       		.uleb128 0x13
 548 0048 00       		.byte	0
 549 0049 00       		.byte	0
 550 004a 07       		.uleb128 0x7
 551 004b 0D       		.uleb128 0xd
 552 004c 00       		.byte	0
 553 004d 03       		.uleb128 0x3
 554 004e 0E       		.uleb128 0xe
 555 004f 3A       		.uleb128 0x3a
 556 0050 0B       		.uleb128 0xb
 557 0051 3B       		.uleb128 0x3b
 558 0052 0B       		.uleb128 0xb
 559 0053 49       		.uleb128 0x49
 560 0054 13       		.uleb128 0x13
 561 0055 38       		.uleb128 0x38
 562 0056 0B       		.uleb128 0xb
 563 0057 00       		.byte	0
 564 0058 00       		.byte	0
 565 0059 08       		.uleb128 0x8
 566 005a 16       		.uleb128 0x16
 567 005b 00       		.byte	0
 568 005c 03       		.uleb128 0x3
 569 005d 0E       		.uleb128 0xe
 570 005e 3A       		.uleb128 0x3a
 571 005f 0B       		.uleb128 0xb
 572 0060 3B       		.uleb128 0x3b
 573 0061 0B       		.uleb128 0xb
 574 0062 49       		.uleb128 0x49
 575 0063 13       		.uleb128 0x13
 576 0064 00       		.byte	0
 577 0065 00       		.byte	0
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 24


 578 0066 09       		.uleb128 0x9
 579 0067 0D       		.uleb128 0xd
 580 0068 00       		.byte	0
 581 0069 03       		.uleb128 0x3
 582 006a 08       		.uleb128 0x8
 583 006b 3A       		.uleb128 0x3a
 584 006c 0B       		.uleb128 0xb
 585 006d 3B       		.uleb128 0x3b
 586 006e 0B       		.uleb128 0xb
 587 006f 49       		.uleb128 0x49
 588 0070 13       		.uleb128 0x13
 589 0071 38       		.uleb128 0x38
 590 0072 0B       		.uleb128 0xb
 591 0073 00       		.byte	0
 592 0074 00       		.byte	0
 593 0075 0A       		.uleb128 0xa
 594 0076 01       		.uleb128 0x1
 595 0077 01       		.byte	0x1
 596 0078 49       		.uleb128 0x49
 597 0079 13       		.uleb128 0x13
 598 007a 01       		.uleb128 0x1
 599 007b 13       		.uleb128 0x13
 600 007c 00       		.byte	0
 601 007d 00       		.byte	0
 602 007e 0B       		.uleb128 0xb
 603 007f 21       		.uleb128 0x21
 604 0080 00       		.byte	0
 605 0081 49       		.uleb128 0x49
 606 0082 13       		.uleb128 0x13
 607 0083 2F       		.uleb128 0x2f
 608 0084 0B       		.uleb128 0xb
 609 0085 00       		.byte	0
 610 0086 00       		.byte	0
 611 0087 0C       		.uleb128 0xc
 612 0088 13       		.uleb128 0x13
 613 0089 01       		.byte	0x1
 614 008a 0B       		.uleb128 0xb
 615 008b 0B       		.uleb128 0xb
 616 008c 3A       		.uleb128 0x3a
 617 008d 0B       		.uleb128 0xb
 618 008e 3B       		.uleb128 0x3b
 619 008f 05       		.uleb128 0x5
 620 0090 01       		.uleb128 0x1
 621 0091 13       		.uleb128 0x13
 622 0092 00       		.byte	0
 623 0093 00       		.byte	0
 624 0094 0D       		.uleb128 0xd
 625 0095 0D       		.uleb128 0xd
 626 0096 00       		.byte	0
 627 0097 03       		.uleb128 0x3
 628 0098 0E       		.uleb128 0xe
 629 0099 3A       		.uleb128 0x3a
 630 009a 0B       		.uleb128 0xb
 631 009b 3B       		.uleb128 0x3b
 632 009c 05       		.uleb128 0x5
 633 009d 49       		.uleb128 0x49
 634 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 25


 635 009f 38       		.uleb128 0x38
 636 00a0 0B       		.uleb128 0xb
 637 00a1 00       		.byte	0
 638 00a2 00       		.byte	0
 639 00a3 0E       		.uleb128 0xe
 640 00a4 2E       		.uleb128 0x2e
 641 00a5 00       		.byte	0
 642 00a6 3F       		.uleb128 0x3f
 643 00a7 19       		.uleb128 0x19
 644 00a8 03       		.uleb128 0x3
 645 00a9 0E       		.uleb128 0xe
 646 00aa 3A       		.uleb128 0x3a
 647 00ab 0B       		.uleb128 0xb
 648 00ac 3B       		.uleb128 0x3b
 649 00ad 0B       		.uleb128 0xb
 650 00ae 27       		.uleb128 0x27
 651 00af 19       		.uleb128 0x19
 652 00b0 11       		.uleb128 0x11
 653 00b1 01       		.uleb128 0x1
 654 00b2 12       		.uleb128 0x12
 655 00b3 06       		.uleb128 0x6
 656 00b4 40       		.uleb128 0x40
 657 00b5 18       		.uleb128 0x18
 658 00b6 9742     		.uleb128 0x2117
 659 00b8 19       		.uleb128 0x19
 660 00b9 00       		.byte	0
 661 00ba 00       		.byte	0
 662 00bb 0F       		.uleb128 0xf
 663 00bc 2E       		.uleb128 0x2e
 664 00bd 00       		.byte	0
 665 00be 3F       		.uleb128 0x3f
 666 00bf 19       		.uleb128 0x19
 667 00c0 03       		.uleb128 0x3
 668 00c1 0E       		.uleb128 0xe
 669 00c2 3A       		.uleb128 0x3a
 670 00c3 0B       		.uleb128 0xb
 671 00c4 3B       		.uleb128 0x3b
 672 00c5 05       		.uleb128 0x5
 673 00c6 27       		.uleb128 0x27
 674 00c7 19       		.uleb128 0x19
 675 00c8 11       		.uleb128 0x11
 676 00c9 01       		.uleb128 0x1
 677 00ca 12       		.uleb128 0x12
 678 00cb 06       		.uleb128 0x6
 679 00cc 40       		.uleb128 0x40
 680 00cd 18       		.uleb128 0x18
 681 00ce 9742     		.uleb128 0x2117
 682 00d0 19       		.uleb128 0x19
 683 00d1 00       		.byte	0
 684 00d2 00       		.byte	0
 685 00d3 10       		.uleb128 0x10
 686 00d4 2E       		.uleb128 0x2e
 687 00d5 01       		.byte	0x1
 688 00d6 3F       		.uleb128 0x3f
 689 00d7 19       		.uleb128 0x19
 690 00d8 03       		.uleb128 0x3
 691 00d9 0E       		.uleb128 0xe
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 26


 692 00da 3A       		.uleb128 0x3a
 693 00db 0B       		.uleb128 0xb
 694 00dc 3B       		.uleb128 0x3b
 695 00dd 05       		.uleb128 0x5
 696 00de 27       		.uleb128 0x27
 697 00df 19       		.uleb128 0x19
 698 00e0 11       		.uleb128 0x11
 699 00e1 01       		.uleb128 0x1
 700 00e2 12       		.uleb128 0x12
 701 00e3 06       		.uleb128 0x6
 702 00e4 40       		.uleb128 0x40
 703 00e5 18       		.uleb128 0x18
 704 00e6 9742     		.uleb128 0x2117
 705 00e8 19       		.uleb128 0x19
 706 00e9 01       		.uleb128 0x1
 707 00ea 13       		.uleb128 0x13
 708 00eb 00       		.byte	0
 709 00ec 00       		.byte	0
 710 00ed 11       		.uleb128 0x11
 711 00ee 898201   		.uleb128 0x4109
 712 00f1 00       		.byte	0
 713 00f2 11       		.uleb128 0x11
 714 00f3 01       		.uleb128 0x1
 715 00f4 9542     		.uleb128 0x2115
 716 00f6 19       		.uleb128 0x19
 717 00f7 31       		.uleb128 0x31
 718 00f8 13       		.uleb128 0x13
 719 00f9 00       		.byte	0
 720 00fa 00       		.byte	0
 721 00fb 12       		.uleb128 0x12
 722 00fc 34       		.uleb128 0x34
 723 00fd 00       		.byte	0
 724 00fe 03       		.uleb128 0x3
 725 00ff 0E       		.uleb128 0xe
 726 0100 3A       		.uleb128 0x3a
 727 0101 0B       		.uleb128 0xb
 728 0102 3B       		.uleb128 0x3b
 729 0103 0B       		.uleb128 0xb
 730 0104 49       		.uleb128 0x49
 731 0105 13       		.uleb128 0x13
 732 0106 3F       		.uleb128 0x3f
 733 0107 19       		.uleb128 0x19
 734 0108 3C       		.uleb128 0x3c
 735 0109 19       		.uleb128 0x19
 736 010a 00       		.byte	0
 737 010b 00       		.byte	0
 738 010c 13       		.uleb128 0x13
 739 010d 2E       		.uleb128 0x2e
 740 010e 00       		.byte	0
 741 010f 3F       		.uleb128 0x3f
 742 0110 19       		.uleb128 0x19
 743 0111 03       		.uleb128 0x3
 744 0112 0E       		.uleb128 0xe
 745 0113 3A       		.uleb128 0x3a
 746 0114 0B       		.uleb128 0xb
 747 0115 3B       		.uleb128 0x3b
 748 0116 0B       		.uleb128 0xb
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 27


 749 0117 27       		.uleb128 0x27
 750 0118 19       		.uleb128 0x19
 751 0119 3C       		.uleb128 0x3c
 752 011a 19       		.uleb128 0x19
 753 011b 00       		.byte	0
 754 011c 00       		.byte	0
 755 011d 00       		.byte	0
 756              		.section	.debug_aranges,"",%progbits
 757 0000 3C000000 		.4byte	0x3c
 758 0004 0200     		.2byte	0x2
 759 0006 00000000 		.4byte	.Ldebug_info0
 760 000a 04       		.byte	0x4
 761 000b 00       		.byte	0
 762 000c 0000     		.2byte	0
 763 000e 0000     		.2byte	0
 764 0010 00000000 		.4byte	.LFB0
 765 0014 34000000 		.4byte	.LFE0-.LFB0
 766 0018 00000000 		.4byte	.LFB1
 767 001c 38000000 		.4byte	.LFE1-.LFB1
 768 0020 00000000 		.4byte	.LFB2
 769 0024 40000000 		.4byte	.LFE2-.LFB2
 770 0028 00000000 		.4byte	.LFB3
 771 002c 02000000 		.4byte	.LFE3-.LFB3
 772 0030 00000000 		.4byte	.LFB4
 773 0034 04000000 		.4byte	.LFE4-.LFB4
 774 0038 00000000 		.4byte	0
 775 003c 00000000 		.4byte	0
 776              		.section	.debug_ranges,"",%progbits
 777              	.Ldebug_ranges0:
 778 0000 00000000 		.4byte	.LFB0
 779 0004 34000000 		.4byte	.LFE0
 780 0008 00000000 		.4byte	.LFB1
 781 000c 38000000 		.4byte	.LFE1
 782 0010 00000000 		.4byte	.LFB2
 783 0014 40000000 		.4byte	.LFE2
 784 0018 00000000 		.4byte	.LFB3
 785 001c 02000000 		.4byte	.LFE3
 786 0020 00000000 		.4byte	.LFB4
 787 0024 04000000 		.4byte	.LFE4
 788 0028 00000000 		.4byte	0
 789 002c 00000000 		.4byte	0
 790              		.section	.debug_line,"",%progbits
 791              	.Ldebug_line0:
 792 0000 E9000000 		.section	.debug_str,"MS",%progbits,1
 792      02007000 
 792      00000201 
 792      FB0E0D00 
 792      01010101 
 793              	.LASF28:
 794 0000 65704372 		.ascii	"epCr0\000"
 794      3000
 795              	.LASF11:
 796 0006 666C6F61 		.ascii	"float\000"
 796      7400
 797              	.LASF40:
 798 000c 55534255 		.ascii	"USBUART_1_EP\000"
 798      4152545F 
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 28


 798      315F4550 
 798      00
 799              	.LASF3:
 800 0019 73686F72 		.ascii	"short unsigned int\000"
 800      7420756E 
 800      7369676E 
 800      65642069 
 800      6E7400
 801              	.LASF32:
 802 002c 55534255 		.ascii	"USBUART_1_EP_1_ISR\000"
 802      4152545F 
 802      315F4550 
 802      5F315F49 
 802      535200
 803              	.LASF26:
 804 003f 6570436E 		.ascii	"epCnt0\000"
 804      743000
 805              	.LASF27:
 806 0046 6570436E 		.ascii	"epCnt1\000"
 806      743100
 807              	.LASF19:
 808 004d 6570546F 		.ascii	"epToggle\000"
 808      67676C65 
 808      00
 809              	.LASF36:
 810 0056 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 810      4320342E 
 810      392E3320 
 810      32303135 
 810      30333033 
 811 0089 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 811      20726576 
 811      6973696F 
 811      6E203232 
 811      31323230 
 812 00bc 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 812      66756E63 
 812      74696F6E 
 812      2D736563 
 812      74696F6E 
 813              	.LASF1:
 814 00e4 756E7369 		.ascii	"unsigned char\000"
 814      676E6564 
 814      20636861 
 814      7200
 815              	.LASF14:
 816 00f2 72656738 		.ascii	"reg8\000"
 816      00
 817              	.LASF5:
 818 00f7 6C6F6E67 		.ascii	"long unsigned int\000"
 818      20756E73 
 818      69676E65 
 818      6420696E 
 818      7400
 819              	.LASF20:
 820 0109 61646472 		.ascii	"addr\000"
 820      00
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 29


 821              	.LASF38:
 822 010e 433A5C54 		.ascii	"C:\\TIRI\\k3g2pmpm_20211223\\trobot_psoc_v6_73\\tro"
 822      4952495C 
 822      6B336732 
 822      706D706D 
 822      5F323032 
 823 013d 626F7436 		.ascii	"bot6_cir2_2wd.cydsn\000"
 823      5F636972 
 823      325F3277 
 823      642E6379 
 823      64736E00 
 824              	.LASF30:
 825 0151 73696545 		.ascii	"sieEp\000"
 825      7000
 826              	.LASF33:
 827 0157 55534255 		.ascii	"USBUART_1_EP_2_ISR\000"
 827      4152545F 
 827      315F4550 
 827      5F325F49 
 827      535200
 828              	.LASF12:
 829 016a 646F7562 		.ascii	"double\000"
 829      6C6500
 830              	.LASF16:
 831 0171 61747472 		.ascii	"attrib\000"
 831      696200
 832              	.LASF39:
 833 0178 55534255 		.ascii	"USBUART_1_BUS_RESET_ISR\000"
 833      4152545F 
 833      315F4255 
 833      535F5245 
 833      5345545F 
 834              	.LASF35:
 835 0190 55534255 		.ascii	"USBUART_1_SOF_ISR\000"
 835      4152545F 
 835      315F534F 
 835      465F4953 
 835      5200
 836              	.LASF10:
 837 01a2 75696E74 		.ascii	"uint16\000"
 837      313600
 838              	.LASF17:
 839 01a9 61706945 		.ascii	"apiEpState\000"
 839      70537461 
 839      746500
 840              	.LASF8:
 841 01b4 756E7369 		.ascii	"unsigned int\000"
 841      676E6564 
 841      20696E74 
 841      00
 842              	.LASF31:
 843 01c1 55534255 		.ascii	"USBUART_1_sie_eps_struct\000"
 843      4152545F 
 843      315F7369 
 843      655F6570 
 843      735F7374 
 844              	.LASF7:
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 30


 845 01da 6C6F6E67 		.ascii	"long long unsigned int\000"
 845      206C6F6E 
 845      6720756E 
 845      7369676E 
 845      65642069 
 846              	.LASF18:
 847 01f1 68774570 		.ascii	"hwEpState\000"
 847      53746174 
 847      6500
 848              	.LASF37:
 849 01fb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBUART_1_episr.c\000"
 849      6E657261 
 849      7465645F 
 849      536F7572 
 849      63655C50 
 850              	.LASF34:
 851 0226 55534255 		.ascii	"USBUART_1_EP_3_ISR\000"
 851      4152545F 
 851      315F4550 
 851      5F335F49 
 851      535200
 852              	.LASF15:
 853 0239 73697A65 		.ascii	"sizetype\000"
 853      74797065 
 853      00
 854              	.LASF29:
 855 0242 55534255 		.ascii	"USBUART_1_sie_ep_struct\000"
 855      4152545F 
 855      315F7369 
 855      655F6570 
 855      5F737472 
 856              	.LASF21:
 857 025a 65704D6F 		.ascii	"epMode\000"
 857      646500
 858              	.LASF6:
 859 0261 6C6F6E67 		.ascii	"long long int\000"
 859      206C6F6E 
 859      6720696E 
 859      7400
 860              	.LASF25:
 861 026f 545F5553 		.ascii	"T_USBUART_1_EP_CTL_BLOCK\000"
 861      42554152 
 861      545F315F 
 861      45505F43 
 861      544C5F42 
 862              	.LASF13:
 863 0288 63686172 		.ascii	"char\000"
 863      00
 864              	.LASF23:
 865 028d 62756666 		.ascii	"bufferSize\000"
 865      65725369 
 865      7A6500
 866              	.LASF2:
 867 0298 73686F72 		.ascii	"short int\000"
 867      7420696E 
 867      7400
 868              	.LASF9:
ARM GAS  C:\Users\miyag\AppData\Local\Temp\cchPxX5D.s 			page 31


 869 02a2 75696E74 		.ascii	"uint8\000"
 869      3800
 870              	.LASF24:
 871 02a8 696E7465 		.ascii	"interface\000"
 871      72666163 
 871      6500
 872              	.LASF4:
 873 02b2 6C6F6E67 		.ascii	"long int\000"
 873      20696E74 
 873      00
 874              	.LASF22:
 875 02bb 62756666 		.ascii	"buffOffset\000"
 875      4F666673 
 875      657400
 876              	.LASF0:
 877 02c6 7369676E 		.ascii	"signed char\000"
 877      65642063 
 877      68617200 
 878              	.LASF41:
 879 02d2 55534255 		.ascii	"USBUART_1_ReInitComponent\000"
 879      4152545F 
 879      315F5265 
 879      496E6974 
 879      436F6D70 
 880              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
